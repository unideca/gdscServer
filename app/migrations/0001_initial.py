# Generated by Django 4.2.16 on 2024-10-22 15:28

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='adminDB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adminEmail', models.CharField(max_length=250)),
                ('password', models.CharField(max_length=250)),
                ('otpCode', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChangeWallet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userPK', models.CharField(blank=True, max_length=255, null=True)),
                ('gdst', models.CharField(blank=True, max_length=255, null=True)),
                ('gdsc', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, default='0', max_length=255, null=True)),
                ('timeStamp', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SafeNews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('newsRegisDate', models.DateTimeField(blank=True, null=True)),
                ('newsClass', models.CharField(blank=True, max_length=255, null=True)),
                ('newsTitle', models.CharField(blank=True, max_length=255, null=True)),
                ('newsContent', models.TextField(blank=True, max_length=1000, null=True)),
                ('newsStatus', models.CharField(blank=True, default='0', max_length=255, null=True)),
                ('newsImg', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SolutionList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('soluRegisDate', models.DateTimeField(blank=True, null=True)),
                ('soluAnswerDate', models.DateTimeField(blank=True, null=True)),
                ('buildingType', models.CharField(blank=True, max_length=255, null=True)),
                ('paidGDST', models.CharField(blank=True, max_length=255, null=True)),
                ('userEmail', models.CharField(blank=True, max_length=255, null=True)),
                ('userName', models.CharField(blank=True, max_length=150, null=True)),
                ('userphone', models.CharField(blank=True, max_length=255, null=True)),
                ('soluStatus', models.CharField(blank=True, default='0', max_length=255, null=True)),
                ('solutionAnswer', models.TextField(blank=True, max_length=1000, null=True)),
                ('SoluImg1', models.CharField(blank=True, max_length=255, null=True)),
                ('SoluImg2', models.CharField(blank=True, max_length=255, null=True)),
                ('SoluImg3', models.CharField(blank=True, max_length=255, null=True)),
                ('SoluImg4', models.CharField(blank=True, max_length=255, null=True)),
                ('SoluImg5', models.CharField(blank=True, max_length=255, null=True)),
                ('SoluImg6', models.CharField(blank=True, max_length=255, null=True)),
                ('userPK', models.CharField(blank=True, max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserEthWallet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userPK', models.CharField(blank=True, max_length=255, null=True)),
                ('userAddr', models.CharField(blank=True, max_length=255, null=True)),
                ('fromAddr', models.CharField(blank=True, max_length=255, null=True)),
                ('toAddr', models.CharField(blank=True, max_length=255, null=True)),
                ('eth', models.CharField(default='0', max_length=255, null=True)),
                ('submitDate', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, default='0', max_length=255, null=True)),
                ('blockHash', models.CharField(blank=True, max_length=255, null=True)),
                ('blockNumber', models.CharField(blank=True, max_length=255, null=True)),
                ('confirmations', models.CharField(blank=True, max_length=255, null=True)),
                ('contractAddress', models.CharField(blank=True, max_length=255, null=True)),
                ('cumulativeGasUsed', models.CharField(blank=True, max_length=255, null=True)),
                ('gas', models.CharField(blank=True, max_length=255, null=True)),
                ('gasPrice', models.CharField(blank=True, max_length=255, null=True)),
                ('gasUsed', models.CharField(blank=True, max_length=255, null=True)),
                ('hash', models.CharField(blank=True, max_length=255, null=True)),
                ('input', models.CharField(blank=True, max_length=255, null=True)),
                ('isError', models.CharField(blank=True, max_length=255, null=True)),
                ('nonce', models.CharField(blank=True, max_length=255, null=True)),
                ('timeStamp', models.DateTimeField(blank=True, null=True)),
                ('transactionIndex', models.CharField(blank=True, max_length=255, null=True)),
                ('txreceipt_status', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UsergdscWallet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userPK', models.CharField(blank=True, max_length=255, null=True)),
                ('blockHash', models.CharField(blank=True, max_length=255, null=True)),
                ('blockNumber', models.CharField(blank=True, max_length=255, null=True)),
                ('confirmations', models.CharField(blank=True, max_length=255, null=True)),
                ('cumulativeGasUsed', models.CharField(blank=True, max_length=255, null=True)),
                ('fromAddr', models.CharField(blank=True, max_length=255, null=True)),
                ('gas', models.CharField(blank=True, max_length=255, null=True)),
                ('gasPrice', models.CharField(blank=True, max_length=255, null=True)),
                ('gasUsed', models.CharField(blank=True, max_length=255, null=True)),
                ('hash', models.CharField(blank=True, max_length=255, null=True)),
                ('input', models.CharField(blank=True, max_length=255, null=True)),
                ('nonce', models.CharField(blank=True, max_length=255, null=True)),
                ('timeStamp', models.CharField(blank=True, max_length=255, null=True)),
                ('to', models.CharField(blank=True, max_length=255, null=True)),
                ('tokenDecimal', models.CharField(blank=True, max_length=255, null=True)),
                ('tokenName', models.CharField(blank=True, max_length=255, null=True)),
                ('tokenSymbol', models.CharField(blank=True, max_length=255, null=True)),
                ('transactionIndex', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('datetime', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userPK', models.CharField(blank=True, max_length=255, null=True)),
                ('point', models.CharField(blank=True, default='0', max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SignUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=150)),
                ('password', models.CharField(max_length=250)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('ethAddr', models.CharField(blank=True, max_length=255, null=True)),
                ('otpCheck', models.CharField(blank=True, default='0', max_length=250, null=True)),
                ('otpCode', models.CharField(blank=True, max_length=255, null=True)),
                ('GDSTamount', models.CharField(blank=True, default='0', max_length=255, null=True)),
                ('GDSCamount', models.CharField(blank=True, default='0', max_length=255, null=True)),
                ('ethValue', models.CharField(blank=True, default='0', max_length=255, null=True)),
                ('tempSoluImg1', models.CharField(blank=True, max_length=255, null=True)),
                ('tempSoluImg2', models.CharField(blank=True, max_length=255, null=True)),
                ('tempSoluImg3', models.CharField(blank=True, max_length=255, null=True)),
                ('tempSoluImg4', models.CharField(blank=True, max_length=255, null=True)),
                ('tempSoluImg5', models.CharField(blank=True, max_length=255, null=True)),
                ('tempSoluImg6', models.CharField(blank=True, max_length=255, null=True)),
                ('ImgCount', models.IntegerField(blank=True, default=0)),
                ('walletMakeTime', models.CharField(blank=True, max_length=255, null=True)),
                ('walletActive', models.CharField(blank=True, max_length=255, null=True)),
                ('PushToken', models.CharField(blank=True, max_length=255, null=True)),
                ('solutionPushStatus', models.CharField(blank=True, default='1', max_length=255, null=True)),
                ('safePushStatus', models.CharField(blank=True, default='1', max_length=255, null=True)),
                ('DI', models.CharField(blank=True, max_length=255, null=True)),
                ('CI', models.CharField(blank=True, max_length=255, null=True)),
                ('CP_CD', models.CharField(blank=True, max_length=30, null=True)),
                ('TX_SEQ_NO', models.CharField(blank=True, max_length=30, null=True)),
                ('RSLT_CD', models.CharField(blank=True, max_length=5, null=True)),
                ('TEL_COM_CD', models.CharField(blank=True, max_length=3, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'app_signup',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
